/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ArrayStack.java:56:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/BagUtils.java:36:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ClosureUtils.java:61:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ClosureUtils.java:107:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ClosureUtils.java:265:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ClosureUtils.java:339:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:57:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:205:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:264:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:275:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:294:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:315:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:333:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:353:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:508:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:531:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:537:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:560:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:585:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:615:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:615:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:657:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:657:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:691:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:751:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:770:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:782:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:782:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:814:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1021:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1064:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1089:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1107:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1109:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1135:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1166:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1186:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1204:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1204:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1231:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1232:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1265:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1289:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1316:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1316:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1335:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1335:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1388:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1422:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1422:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1425:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1447:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1447:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1478:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1478:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1478:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1509:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1541:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1541:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1554:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1582:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1582:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1616:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1616:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1616:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1648:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1700:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1706:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1726:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1769:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1797:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1803:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1823:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1879:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1932:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1949:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:1980:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2027:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2027:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2052:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2062:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2087:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2087:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2111:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2134:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/CollectionUtils.java:2134:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ComparatorUtils.java:42:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ComparatorUtils.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/EnumerationUtils.java:32:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/FactoryUtils.java:45:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/FluentIterable.java:283:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/FunctorException.java:34:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/Get.java:93:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IterableUtils.java:50:	UseUtilityClass:	This utility class has a non-private constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IterableUtils.java:395:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IterableUtils.java:627:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'IterableUtils': 'isEmpty' is already in scope
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IterableUtils.java:710:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IterableUtils.java:1139:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IteratorUtils.java:80:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IteratorUtils.java:366:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IteratorUtils.java:435:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IteratorUtils.java:510:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/IteratorUtils.java:975:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:44:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:222:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:321:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:321:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:551:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:551:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:586:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:586:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:613:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/ListUtils.java:634:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:81:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:106:	UnusedPrivateMethod:	Avoid unused private methods such as 'applyDefaultFunction(Map<? super K, ?>, K, BiFunction<Map<? super K, ?>, K, R>, Function<K, R>)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:106:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:107:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:124:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:125:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:145:	UnusedPrivateMethod:	Avoid unused private methods such as 'applyDefaultValue(Map<? super K, ?>, K, BiFunction<Map<? super K, ?>, K, R>, R)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:145:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:146:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:168:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:180:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:180:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:194:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:226:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:256:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:272:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:291:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:310:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:332:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:348:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:370:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:386:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:401:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:417:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:436:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:452:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:474:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:490:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:506:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:522:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:541:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:557:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:579:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:595:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:611:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:627:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:646:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:662:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:685:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:701:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:716:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:735:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:752:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:767:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:790:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:805:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:820:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:839:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:856:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:871:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:871:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:878:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:893:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:893:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:894:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:909:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:909:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:909:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:926:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:958:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:974:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:987:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1004:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1025:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1048:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1064:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1079:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1098:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1115:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1130:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1152:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1168:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1186:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1186:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1188:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1205:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1219:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1233:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1288:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1330:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1423:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1423:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1442:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1442:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1463:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1463:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1481:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1497:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1515:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1572:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1656:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1656:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1711:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1723:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1751:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1751:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1791:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1794:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1819:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1855:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1902:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1902:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1939:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1960:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MapUtils.java:1961:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiMapUtils.java:44:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiMapUtils.java:90:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiMapUtils.java:94:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiMapUtils.java:108:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiMapUtils.java:128:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiMapUtils.java:151:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiSetUtils.java:29:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:71:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:71:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:124:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:141:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:257:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:297:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/MultiValuedMap.java:338:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/PredicateUtils.java:73:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/PredicateUtils.java:87:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/PredicateUtils.java:135:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/PredicateUtils.java:330:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/PredicateUtils.java:443:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/Put.java:70:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/QueueUtils.java:32:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SetUtils.java:49:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SetUtils.java:234:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SetUtils.java:321:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SetUtils.java:321:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SplitMapUtils.java:39:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SplitMapUtils.java:70:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SplitMapUtils.java:133:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SplitMapUtils.java:162:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/SplitMapUtils.java:252:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/TransformerUtils.java:72:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/TransformerUtils.java:129:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/TransformerUtils.java:310:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/TransformerUtils.java:372:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/TransformerUtils.java:410:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/TrieUtils.java:26:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractBagDecorator.java:43:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:132:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:145:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:159:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:168:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:179:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:293:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java:368:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/AbstractSortedBagDecorator.java:42:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/HashBag.java:57:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bag/TreeBag.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:472:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:558:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:565:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:594:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:611:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:611:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:626:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:626:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:657:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java:657:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualHashBidiMap.java:64:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualHashBidiMap.java:76:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualHashBidiMap.java:76:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualHashBidiMap.java:107:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualLinkedHashBidiMap.java:58:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualLinkedHashBidiMap.java:70:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualLinkedHashBidiMap.java:70:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualLinkedHashBidiMap.java:101:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java:269:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java:283:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java:283:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java:407:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:687:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:703:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1020:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1098:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1104:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1227:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1255:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1281:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1364:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1458:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1460:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1845:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:1895:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2034:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2062:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2108:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2110:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2113:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2138:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2183:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java:2185:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java:119:	UnusedPrivateMethod:	Avoid unused private methods such as 'add(int, int)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java:226:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java:237:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java:280:	UnusedPrivateMethod:	Avoid unused private methods such as 'subtract(int, int)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/BitMaps.java:27:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilter.java:328:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/EnhancedDoubleHasher.java:198:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java:56:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java:63:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java:215:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/SetOperations.java:62:	UnusedPrivateMethod:	Avoid unused private methods such as 'cardinality(BitMapExtractor, BitMapExtractor, LongBinaryOperator)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/bloomfilter/SparseBloomFilter.java:64:	UnusedPrivateMethod:	Avoid unused private methods such as 'add(int)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java:60:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java:66:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java:72:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java:81:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java:116:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java:160:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:43:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:64:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:79:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:80:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:95:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:107:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:112:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:120:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:129:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:139:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:140:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:191:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:202:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:203:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:216:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:217:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:235:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:250:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:285:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:306:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:369:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:380:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:400:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:420:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:446:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:487:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java:504:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java:64:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java:83:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java:107:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java:200:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java:280:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java:138:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java:308:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java:354:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java:373:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java:44:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java:58:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java:62:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java:73:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java:85:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java:130:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java:61:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java:91:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java:109:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java:132:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java:132:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java:56:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java:56:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java:59:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java:72:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/comparators/ComparableComparator.java:74:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/comparators/ComparableComparator.java:74:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java:82:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java:97:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/comparators/NullComparator.java:133:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/AllPredicate.java:57:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/AnyPredicate.java:54:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/CatchAndRethrowClosure.java:64:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/ChainedClosure.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/ChainedTransformer.java:55:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/CloneTransformer.java:36:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/DefaultEquator.java:30:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java:75:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java:91:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java:105:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java:116:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/IdentityPredicate.java:81:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/InstantiateFactory.java:134:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java:119:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/InvokerTransformer.java:132:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/InvokerTransformer.java:135:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/MapTransformer.java:47:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/MapTransformer.java:55:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/MapTransformer.java:63:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/MapTransformer.java:73:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/NOPTransformer.java:29:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/NonePredicate.java:52:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/NullIsFalsePredicate.java:81:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/NullIsTruePredicate.java:81:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/OnePredicate.java:49:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/PrototypeFactory.java:43:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/PrototypeFactory.java:50:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/PrototypeFactory.java:94:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/PrototypeFactory.java:104:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/SwitchClosure.java:57:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/SwitchTransformer.java:60:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/UniquePredicate.java:55:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/functors/UniquePredicate.java:55:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/AbstractEmptyIterator.java:33:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/AbstractEmptyMapIterator.java:31:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/AbstractEmptyMapIterator.java:31:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java:88:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java:96:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java:97:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EmptyIterator.java:75:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EmptyListIterator.java:75:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EmptyMapIterator.java:51:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EmptyOrderedIterator.java:51:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EmptyOrderedMapIterator.java:51:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EntrySetMapIterator.java:43:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EntrySetMapIterator.java:53:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EnumerationIterator.java:33:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/EnumerationIterator.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/FilterIterator.java:53:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/FilterListIterator.java:76:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/IteratorChain.java:84:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/IteratorChain.java:100:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/IteratorEnumeration.java:38:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/IteratorOperations.java:43:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/IteratorOperations.java:66:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/LoopingIterator.java:44:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/LoopingIterator.java:58:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/PermutationIterator.java:56:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/PermutationIterator.java:78:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/iterators/TransformIterator.java:42:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/keyvalue/AbstractMapEntryDecorator.java:49:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java:121:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java:137:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java:41:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java:52:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java:123:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:154:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:159:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:202:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:556:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:564:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:802:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:815:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:877:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:922:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:951:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:999:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:1014:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:1098:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java:1120:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:157:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:162:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:205:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:555:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:563:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:791:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:802:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:864:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:909:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:938:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:984:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:997:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:1081:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractLinkedListJava21.java:1103:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/AbstractListDecorator.java:43:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java:308:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java:586:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/NodeCachingLinkedList.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/TreeList.java:83:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/TreeList.java:106:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/TreeList.java:912:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/list/TreeList.java:921:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:588:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:647:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:761:	CloneMethodMustBePublic:	clone() method must be public if the class implements Cloneable
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:761:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:1107:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:1247:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:1260:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:1460:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java:1462:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractInputCheckedMapDecorator.java:153:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractInputCheckedMapDecorator.java:162:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:207:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:216:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:228:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:246:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:377:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:420:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:465:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:471:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:661:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java:673:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java:46:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java:52:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java:61:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java:85:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java:96:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractOrderedMapDecorator.java:47:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:109:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:110:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:678:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:728:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:743:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:975:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:985:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java:995:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/AbstractSortedMapDecorator.java:99:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CaseInsensitiveMap.java:119:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:81:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:99:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:100:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:112:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:113:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:113:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:117:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:123:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:143:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:155:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:155:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:167:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:167:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:179:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:194:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:197:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:205:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:310:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:508:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:508:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:512:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/CompositeMap.java:519:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:122:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:147:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:156:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:247:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:411:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:485:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:489:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:489:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:498:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:689:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:709:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:719:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:867:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:890:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:979:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:1019:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:1033:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:1417:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:1437:	LogicInversion:	Use opposite operator instead of the logic complement operator.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:1775:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMap.java:1884:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java:91:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java:112:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java:112:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java:131:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java:145:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java:77:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java:87:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java:158:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:180:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:208:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:224:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:308:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:324:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:551:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:560:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:613:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:618:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:622:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:629:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:634:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:638:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:659:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:664:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:668:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:674:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:679:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:683:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:700:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:702:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:704:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:767:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:773:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:782:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:790:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:815:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:821:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:825:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:832:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:838:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:842:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:865:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:867:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:869:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:939:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:946:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:952:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:961:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:968:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:974:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:985:	DefaultLabelNotLastInSwitchStmt:	The default label should be the last label in a switch statement
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1069:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1135:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1233:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1235:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1237:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1238:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1240:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1242:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1243:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/Flat3Map.java:1245:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/HashedMap.java:87:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LRUMap.java:202:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LRUMap.java:217:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LRUMap.java:505:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LazyMap.java:86:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LazyMap.java:101:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LazyMap.java:115:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LazyMap.java:127:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/LinkedMap.java:217:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:114:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:392:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:415:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:614:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:651:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:748:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java:750:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:79:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:143:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:186:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:186:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:203:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:203:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:219:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:219:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:220:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:224:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:227:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:247:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:247:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:303:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:304:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:321:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:348:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:367:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:426:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:449:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:454:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:526:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:547:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java:578:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java:199:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java:236:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java:270:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java:307:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java:319:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PredicatedMap.java:77:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/PredicatedMap.java:97:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ReferenceIdentityMap.java:216:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/ReferenceIdentityMap.java:231:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/SingletonMap.java:239:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/SingletonMap.java:320:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/SingletonMap.java:579:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/SingletonMap.java:581:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java:272:	AvoidProtectedFieldInFinalClass:	Avoid protected fields in a final class.  Change to private or package access.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java:273:	AvoidProtectedFieldInFinalClass:	Avoid protected fields in a final class.  Change to private or package access.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java:274:	AvoidProtectedFieldInFinalClass:	Avoid protected fields in a final class.  Change to private or package access.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java:516:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:77:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:82:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:105:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:129:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:211:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:211:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedMap.java:215:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java:80:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java:65:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java:65:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java:68:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java:81:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java:143:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java:137:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractListValuedMap.java:230:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractListValuedMap.java:239:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:66:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:102:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:104:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:110:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:116:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:116:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:118:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:118:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:144:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:146:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:165:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:167:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:170:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:196:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:223:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:256:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:379:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:417:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:427:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:437:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:447:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:456:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:462:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:466:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:472:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:478:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:487:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:501:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:515:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:529:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:535:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:545:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:554:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:564:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:576:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:576:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:581:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:591:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:591:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:592:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:612:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:626:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:641:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:658:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:700:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:700:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:757:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:782:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:862:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:881:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:881:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:882:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:899:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:919:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java:923:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapDecorator.java:103:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractSetValuedMap.java:75:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/AbstractSetValuedMap.java:84:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMap.java:101:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMap.java:138:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/ArrayListValuedLinkedHashMap.java:101:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/ArrayListValuedLinkedHashMap.java:138:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/HashSetValuedHashMap.java:100:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multimap/LinkedHashSetValuedLinkedHashMap.java:100:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java:211:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java:270:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java:281:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java:290:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java:423:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java:492:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMultiSet.java:245:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/AbstractMultiSetDecorator.java:42:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/multiset/HashMultiSet.java:55:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java:164:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java:166:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/properties/OrderedPropertiesFactory.java:26:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/properties/PropertiesFactory.java:43:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/properties/SortedPropertiesFactory.java:26:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/queue/AbstractQueueDecorator.java:48:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java:94:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/queue/PredicatedQueue.java:58:	FormalParameterNamingConventions:	The final method parameter name 'Queue' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/AbstractNavigableSetDecorator.java:41:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/AbstractSetDecorator.java:42:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/AbstractSortedSetDecorator.java:43:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:90:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:107:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:122:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:195:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:245:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:402:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:426:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:445:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/CompositeSet.java:511:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java:66:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java:71:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java:76:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java:253:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/MapBackedSet.java:58:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/MapBackedSet.java:73:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/MapBackedSet.java:78:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/set/MapBackedSet.java:90:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java:39:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java:44:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java:52:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java:71:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java:82:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java:91:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java:113:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java:180:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java:180:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java:184:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractBitwiseTrie.java:76:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractBitwiseTrie.java:178:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractBitwiseTrie.java:199:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:56:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:65:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:434:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1041:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1041:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1110:	AvoidProtectedFieldInFinalClass:	Avoid protected fields in a final class.  Change to private or package access.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1241:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1243:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1243:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1245:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1272:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1306:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1838:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1842:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1873:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1885:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1887:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1895:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1905:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1911:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1974:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1981:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:1990:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2131:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2150:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2158:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2160:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2183:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2198:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2206:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2206:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2210:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2225:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2229:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2234:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java:2412:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie.java:81:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/analyzer/StringKeyAnalyzer.java:52:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/main/java/org/apache/commons/collections4/trie/analyzer/StringKeyAnalyzer.java:78:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/AbstractObjectTest.java:231:	EqualsNull:	Avoid using equals() to compare against null
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ArrayUtilsTest.java:41:	MethodNamingConventions:	The JUnit 5 test method name 'testContains_LANG_1261' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ArrayUtilsTest.java:44:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ClosureUtilsTest.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ClosureUtilsTest.java:102:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ClosureUtilsTest.java:238:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ClosureUtilsTest.java:286:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:91:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:96:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:101:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:101:	SingularField:	Perhaps 'collectionA2' could be replaced by a local variable.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:106:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:106:	SingularField:	Perhaps 'collectionB2' could be replaced by a local variable.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:112:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:124:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:128:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:183:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:189:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:195:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:201:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:207:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:213:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:219:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:267:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:284:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:289:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:301:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:315:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:316:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:316:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:319:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:323:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:326:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:336:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:344:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:345:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:345:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:348:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:352:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:355:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:500:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:504:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:654:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:687:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:688:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:690:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:692:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:694:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:697:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:723:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:725:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:728:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:731:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:734:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:757:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:771:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:773:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:779:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:780:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:782:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:784:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:786:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:808:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:815:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:817:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:823:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:831:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:832:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:839:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:840:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:850:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:851:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:852:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:858:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:859:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:860:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:866:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:873:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:880:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:887:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:971:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:973:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:984:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:991:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1017:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1022:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1022:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1024:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1024:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1038:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1042:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1071:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1122:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1162:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1182:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1194:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1205:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1206:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1213:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1214:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1224:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1231:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1246:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1247:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1256:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1302:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1303:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1328:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1334:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1357:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1363:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1379:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1385:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1458:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1459:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1480:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1487:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1500:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1540:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1547:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1598:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1617:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1629:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1644:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1686:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1727:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1752:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1758:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1764:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1770:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1779:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1795:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1802:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1810:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1816:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1823:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1839:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1881:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1938:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1939:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1948:	MethodNamingConventions:	The JUnit 5 test method name 'testSelect_Iterable_Predicate_Collection_JiraCollections864' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1952:	UnusedLocalVariable:	Avoid unused local variables such as 'instanceofPredicate0'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1963:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:1964:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2004:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Array' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2017:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Enumeration' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2027:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Iterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2037:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_List' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2049:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Map' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2050:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2059:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Other' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2064:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_PrimitiveArray' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2077:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_Array' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2090:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_Enumeration' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2101:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_Iterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2112:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_List' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2120:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_Map' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2121:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2128:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_Null' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2133:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_Other' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2139:	MethodNamingConventions:	The JUnit 5 test method name 'testSizeIsEmpty_PrimitiveArray' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2153:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2154:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2161:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2162:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2172:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2179:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2189:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2190:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2201:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2246:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2251:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedCollection_2' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2256:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2276:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2277:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2284:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2285:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2295:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2302:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java:2310:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/FactoryUtilsTest.java:51:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/FactoryUtilsTest.java:73:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/FactoryUtilsTest.java:88:	AssignmentToNonFinalStatic:	Possible unsafe assignment to non-final static field 'cCounter' in a constructor.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/FluentIterableTest.java:74:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/FluentIterableTest.java:87:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/GuavaTestlibTest.java:79:	UnusedPrivateMethod:	Avoid unused private methods such as 'suiteList(String, Supplier<List<String>>, Feature<?>[])'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/GuavaTestlibTest.java:106:	UnusedPrivateMethod:	Avoid unused private methods such as 'suiteMap(String, Supplier<Map<String, String>>)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/GuavaTestlibTest.java:106:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/GuavaTestlibTest.java:110:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:87:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:100:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:333:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:357:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:378:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:518:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IterableUtilsTest.java:550:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:74:	SingularField:	Perhaps 'collectionA' could be replaced by a local variable.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:392:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:478:	UnusedLocalVariable:	Avoid unused local variables such as 'iList'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:481:	SingularField:	Perhaps 'lst' could be replaced by a local variable.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:507:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:554:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:767:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:792:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:839:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:880:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:882:	UnusedLocalVariable:	Avoid unused local variables such as 'iterator'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java:891:	UnusedLocalVariable:	Avoid unused local variables such as 'iterator'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ListUtilsTest.java:55:	SingularField:	Perhaps 'fullArray' could be replaced by a local variable.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ListUtilsTest.java:83:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/ListUtilsTest.java:122:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:29:	UseUtilityClass:	This utility class has a non-private constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:31:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:33:	UncommentedEmptyMethodBody:	Document empty method body
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:64:	UncommentedEmptyMethodBody:	Document empty method body
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:76:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:90:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:91:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:113:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:114:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapPerformance.java:119:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:99:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:121:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:128:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:131:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:144:	LocalVariableNamingConventions:	The final local variable name 'LABEL' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:146:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:164:	LocalVariableNamingConventions:	The final local variable name 'LABEL' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:165:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:178:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:182:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:186:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:200:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:202:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:208:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:220:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:222:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:222:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:228:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:240:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:242:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:243:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:253:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:265:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:267:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:277:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:290:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:308:	LocalVariableNamingConventions:	The final local variable name 'LABEL' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:309:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:311:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:312:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:313:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:342:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:354:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:360:	UnusedLocalVariable:	Avoid unused local variables such as 'exception'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:365:	UnusedLocalVariable:	Avoid unused local variables such as 'exception'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:370:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:387:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:403:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:412:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:419:	UselessParentheses:	Useless parentheses.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:425:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:433:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:446:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:455:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:467:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:476:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:488:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:496:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:508:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:513:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:522:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:522:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:523:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:526:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:536:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:543:	UnconditionalIfStatement:	Do not use if statements that are always true or always false
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:552:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:560:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:572:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:585:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:593:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:611:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:612:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:618:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:628:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:645:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:653:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:659:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:666:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:672:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:678:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:685:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:722:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:732:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:754:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:803:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:806:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:823:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:871:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:879:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_Map_array' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:885:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:982:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1010:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1024:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1032:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1034:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1060:	UnusedLocalVariable:	Avoid unused local variables such as 'exception'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1065:	UnusedLocalVariable:	Avoid unused local variables such as 'exception'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1073:	LocalVariableNamingConventions:	The final local variable name 'LABEL' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1074:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1087:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1091:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1095:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1109:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1111:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1117:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1129:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1131:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1131:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1137:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1149:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1151:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1152:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1162:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1174:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1176:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1186:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1199:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1217:	LocalVariableNamingConventions:	The final local variable name 'LABEL' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1218:	LocalVariableNamingConventions:	The final local variable name 'INDENT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1220:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1221:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1222:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MapUtilsTest.java:1251:	LocalVariableNamingConventions:	The final local variable name 'EXPECTED_OUT' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MockTestCase.java:61:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MultiMapUtilsTest.java:67:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MultiSetUtilsTest.java:33:	SingularField:	Perhaps 'fullArray' could be replaced by a local variable.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/MultiSetUtilsTest.java:72:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:63:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:121:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:149:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:207:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:363:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:422:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:487:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java:590:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SetUtilsTest.java:116:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SetUtilsTest.java:132:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java:41:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java:46:	UnusedPrivateMethod:	Avoid unused private methods such as 'attemptGetOperation(Runnable)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java:51:	UnusedPrivateMethod:	Avoid unused private methods such as 'attemptPutOperation(Runnable)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java:131:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java:143:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java:154:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/TransformerUtilsTest.java:65:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/TransformerUtilsTest.java:78:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/TransformerUtilsTest.java:215:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/TransformerUtilsTest.java:287:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/TransformerUtilsTest.java:328:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:121:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:122:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:128:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:129:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:141:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:141:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:179:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:431:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:644:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:646:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:647:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:648:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:669:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:671:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:672:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java:673:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/CollectionBagTest.java:71:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/CollectionBagTest.java:82:	MethodNamingConventions:	The JUnit 5 test method name 'testAdd_Predicate_ComparatorCustom' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/CollectionBagTest.java:89:	MethodNamingConventions:	The JUnit 5 test method name 'testAdd_Predicate_ComparatorDefault' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/CollectionSortedBagTest.java:98:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/PredicatedSortedBagTest.java:36:	FinalFieldCouldBeStatic:	This final field could be made static
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/TransformedBagTest.java:72:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedBag_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bag/TransformedSortedBagTest.java:61:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedBag_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:51:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:51:	UncommentedEmptyConstructor:	Document empty constructor
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:64:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:66:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:68:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:70:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:72:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:100:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:327:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:590:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:591:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:594:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java:595:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractOrderedBidiMapTest.java:141:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractOrderedBidiMapTest.java:176:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bidimap/AbstractSortedBidiMapTest.java:53:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/AbstractCountingBloomFilterTest.java:50:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/AbstractCountingBloomFilterTest.java:93:	UnusedLocalVariable:	Avoid unused local variables such as 'f3'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/CountingPredicateTest.java:34:	UnusedPrivateMethod:	Avoid unused private methods such as 'makeFunc(BiPredicate<Integer, Integer>, List<Pair<Integer, Integer>>)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/IndexFilterTest.java:59:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilterTest.java:194:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LayeredBloomFilterTest': 'fixed' is already in scope
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilterTest.java:214:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LayeredBloomFilterTest': 'fixed' is already in scope
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilterTest.java:238:	UselessParentheses:	Useless parentheses.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilterTest.java:366:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LayeredBloomFilterTest': 'fixed' is already in scope
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilterTest.java:376:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LayeredBloomFilterTest': 'fixed' is already in scope
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java:31:	UnusedPrivateMethod:	Avoid unused private methods such as 'assertSymmetricOperation(double, ToDoubleBiFunction<BloomFilter, BloomFilter>, BloomFilter, BloomFilter)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java:37:	UnusedPrivateMethod:	Avoid unused private methods such as 'assertSymmetricOperation(int, ToIntBiFunction<BloomFilter, BloomFilter>, BloomFilter, BloomFilter)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java:51:	UnusedPrivateMethod:	Avoid unused private methods such as 'createFilter(Shape, IndexExtractor)'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/bloomfilter/TestingHashers.java:24:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:167:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:170:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:180:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:180:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:183:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:193:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:193:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:196:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:206:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:209:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:250:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:260:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:297:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:301:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:485:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:495:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:505:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:506:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:541:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:549:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:694:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:765:	UnusedLocalVariable:	Avoid unused local variables such as 'element'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:824:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java:997:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:42:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:44:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:90:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:113:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:122:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:131:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:155:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:164:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:191:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:206:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:215:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:348:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java:433:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:48:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:48:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:52:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:90:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:102:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:120:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:130:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java:139:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionBuilderTest.java:45:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionBuilderTest.java:55:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionTest.java:42:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionTest.java:43:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionTest.java:79:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionTest.java:86:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/PredicatedCollectionTest.java:97:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/TransformedCollectionTest.java:95:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/TransformedCollectionTest.java:109:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedCollection_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/TransformedCollectionTest.java:110:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/TransformedCollectionTest.java:113:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/TransformedCollectionTest.java:113:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'TransformedCollectionTest': 'STRING_TO_INTEGER_TRANSFORMER' is already in scope because it is declared in an enclosing type
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/collection/UnmodifiableCollectionTest.java:75:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/comparators/AbstractNullComparatorTest.java:26:	AbstractClassWithoutAnyMethod:	No abstract method which means that the keyword is most likely used to prevent instantiation. Use a private or protected constructor instead.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/comparators/ComparatorChainTest.java:76:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/comparators/FixedOrderComparatorTest.java:61:	EqualsNull:	Avoid using equals() to compare against null
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/comparators/TransformingComparatorTest.java:65:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/comparators/TransformingComparatorTest.java:69:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/functors/AbstractCompositePredicateTest.java:67:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/functors/AbstractCompositePredicateTest.java:117:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/functors/CatchAndRethrowClosureTest.java:48:	UncommentedEmptyMethodBody:	Document empty method body
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/functors/CatchAndRethrowClosureTest.java:69:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/functors/EqualPredicateTest.java:33:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:63:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:71:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:135:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:154:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:183:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:202:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:224:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:225:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:266:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:284:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java:285:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractOrderedMapIteratorTest.java:86:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/AbstractOrderedMapIteratorTest.java:139:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/FilterIteratorTest.java:200:	UnusedLocalVariable:	Avoid unused local variables such as 'expected'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/FilterListIteratorTest.java:147:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/IteratorChainTest.java:155:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/LazyIteratorChainTest.java:63:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/LazyIteratorChainTest.java:109:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/LazyIteratorChainTest.java:151:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:169:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_IteratorOfIterators' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:184:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_IteratorOfIteratorsWithEmptyIterators' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:203:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_RootNoTransformer' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:215:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_RootNull' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:226:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_Transformed1' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:239:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_Transformed2' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:273:	MethodNamingConventions:	The JUnit 5 test method name 'testIteration_Transformed3' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:307:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructor_null_next' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:313:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructor_null_remove' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:319:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructor_null1' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:330:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructorIteration_Empty' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:342:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructorIteration_Simple' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:359:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructorIteration_SimpleNoHasNext' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIteratorTest.java:374:	MethodNamingConventions:	The JUnit 5 test method name 'testIteratorConstructorIteration_WithEmptyIterators' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/UnmodifiableMapIteratorTest.java:44:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/iterators/UnmodifiableOrderedMapIteratorTest.java:45:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/AbstractMapEntryTest.java:39:	FinalFieldCouldBeStatic:	This final field could be made static
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/AbstractMapEntryTest.java:40:	FinalFieldCouldBeStatic:	This final field could be made static
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/AbstractMapEntryTest.java:53:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValueTest.java:35:	FinalFieldCouldBeStatic:	This final field could be made static
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValueTest.java:36:	FinalFieldCouldBeStatic:	This final field could be made static
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValueTest.java:100:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValueTest.java:151:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java:150:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java:182:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java:196:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java:225:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/TiedMapEntryTest.java:36:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/keyvalue/TiedMapEntryTest.java:56:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/AbstractListTest.java:246:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/AbstractListTest.java:251:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/AbstractListTest.java:593:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:571:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextAddIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:595:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextAddByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:619:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextAddIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:643:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextNextRemoveIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:670:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextPreviousAddByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:694:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextPreviousAddIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:720:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextPreviousRemoveByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:745:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextPreviousRemoveIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:772:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextPreviousSetByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:798:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextRemoveByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:822:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextRemoveByListSetByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:844:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextRemoveIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:870:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextNextSetByIterator' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/CursorableLinkedListTest.java:895:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_CursorNextRemoveIndex1ByList' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/GrowthListTest.java:67:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/NodeCachingLinkedListTest.java:38:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/SetUniqueListTest.java:302:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/SetUniqueListTest.java:406:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/SetUniqueListTest.java:433:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/list/TransformedListTest.java:143:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedList_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:139:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:233:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:240:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:268:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:270:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:272:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:274:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:376:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:383:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:449:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:455:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:472:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:479:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:515:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:518:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:523:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:613:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:865:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:880:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:965:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:968:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1115:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1118:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1172:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1175:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1220:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1223:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1347:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1350:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1355:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1358:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1406:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1434:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1477:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1486:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1542:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1574:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1621:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1749:	EqualsNull:	Avoid using equals() to compare against null
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1873:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1883:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1916:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:1937:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2027:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2045:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2098:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2119:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2228:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2345:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2361:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2386:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2387:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2416:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2452:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java:2477:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractOrderedMapTest.java:179:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractOrderedMapTest.java:212:	EmptyCatchBlock:	Avoid empty catch blocks
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractSortedMapTest.java:47:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractSortedMapTest.java:103:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/AbstractSortedMapTest.java:166:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/CaseInsensitiveMapTest.java:52:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/CaseInsensitiveMapTest.java:119:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/CaseInsensitiveMapTest.java:135:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/CaseInsensitiveMapTest.java:141:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/CompositeMapTest.java:43:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/CompositeMapTest.java:51:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMapTest.java:38:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ConcurrentReferenceHashMapTest.java:41:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/DefaultedMapTest.java:79:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/DefaultedMapTest.java:97:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/DefaultedMapTest.java:117:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/DefaultedMapTest.java:137:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/FixedSizeMapTest.java:50:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/Flat3MapTest.java:121:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/Flat3MapTest.java:127:	UnusedLocalVariable:	Avoid unused local variables such as 'mapEntry1'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/Flat3MapTest.java:128:	UnusedLocalVariable:	Avoid unused local variables such as 'mapEntry2'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/Flat3MapTest.java:129:	UnusedLocalVariable:	Avoid unused local variables such as 'mapEntry3'.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/Flat3MapTest.java:486:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/IdentityMap.java:121:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/IdentityMap.java:173:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/IdentityMap.java:186:	CompareObjectsWithEquals:	Use equals() to compare object references.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:102:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:119:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:293:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:318:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_Buckets' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:409:	MethodNamingConventions:	The JUnit 5 test method name 'testInternalState_getEntry_int' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:587:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:589:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:590:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:666:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:668:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:669:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:752:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:753:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:834:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:836:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LRUMapTest.java:837:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LazyMapTest.java:66:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LazyMapTest.java:85:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LazySortedMapTest.java:83:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/LinkedMapTest.java:122:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:168:	MethodNamingConventions:	The JUnit 5 test method name 'testCOLLECTIONS_474_nonNullValues' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:183:	MethodNamingConventions:	The JUnit 5 test method name 'testCOLLECTIONS_474_nullValues' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:246:	MethodNamingConventions:	The JUnit 5 test method name 'testPut_intObjectObject' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:375:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:400:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:454:	MethodNamingConventions:	The JUnit 5 test method name 'testValueList_getByIndex' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:464:	MethodNamingConventions:	The JUnit 5 test method name 'testValueList_removeByIndex' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ListOrderedMapTest.java:486:	MethodNamingConventions:	The JUnit 5 test method name 'testValueList_setByIndex' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiKeyMapTest.java:134:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:60:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:84:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:91:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:126:	MethodNamingConventions:	The JUnit 5 test method name 'testContainsValue_Key' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:137:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:138:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:144:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:145:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:166:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:179:	MethodNamingConventions:	The JUnit 5 test method name 'testIterator_Key' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:240:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_KeyCollection' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:242:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:273:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_Map1' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:295:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_Map2' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:296:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:343:	MethodNamingConventions:	The JUnit 5 test method name 'testRemove_KeyItem' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:410:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Key' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java:493:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:81:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:82:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:97:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:98:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:113:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:132:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:143:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:155:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:184:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:198:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:209:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:222:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:228:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:239:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:245:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java:257:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PredicatedMapTest.java:46:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PredicatedMapTest.java:68:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PredicatedMapTest.java:79:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PredicatedMapTest.java:89:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PredicatedSortedMapTest.java:109:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/PredicatedSortedMapTest.java:119:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:44:	PrimitiveWrapperInstantiation:	Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:45:	PrimitiveWrapperInstantiation:	Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:46:	PrimitiveWrapperInstantiation:	Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:47:	PrimitiveWrapperInstantiation:	Do not use `new Integer(...)`, prefer `Integer.valueOf(...)`
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:65:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:72:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:310:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java:316:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java:98:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java:105:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java:256:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java:271:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java:350:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java:356:	AssignmentInOperand:	Avoid assignments in operands
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/StaticBucketMapTest.java:50:	MethodNamingConventions:	The JUnit 5 test method name 'test_containsKey_nullMatchesIncorrectly' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/StaticBucketMapTest.java:63:	MethodNamingConventions:	The JUnit 5 test method name 'test_containsValue_nullMatchesIncorrectly' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/StaticBucketMapTest.java:77:	MethodNamingConventions:	The JUnit 5 test method name 'test_get_nullMatchesIncorrectly' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:56:	MethodNamingConventions:	The JUnit 5 test method name 'testFactory_Decorate' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:57:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:62:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:77:	MethodNamingConventions:	The JUnit 5 test method name 'testFactory_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:78:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:83:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java:101:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedSortedMapTest.java:64:	MethodNamingConventions:	The JUnit 5 test method name 'testFactory_Decorate' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/TransformedSortedMapTest.java:85:	MethodNamingConventions:	The JUnit 5 test method name 'testFactory_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/UnmodifiableMapTest.java:60:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/map/UnmodifiableMapTest.java:72:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:67:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:67:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:67:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:97:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:131:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:215:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:221:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:238:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:245:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:296:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:303:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:386:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:392:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:409:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:416:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:687:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:688:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:729:	MethodNamingConventions:	The JUnit 5 test method name 'testAsMapGet_Empty' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:731:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:731:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:737:	MethodNamingConventions:	The JUnit 5 test method name 'testAsMapGet_Full' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:739:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:739:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:743:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:754:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:754:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:783:	MethodNamingConventions:	The JUnit 5 test method name 'testContainsValue_Key' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:814:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:917:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1011:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1055:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_KeyIterable' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1058:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1091:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_Map1' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1118:	MethodNamingConventions:	The JUnit 5 test method name 'testPutAll_Map2' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1120:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1129:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1146:	MethodNamingConventions:	The JUnit 5 test method name 'testRemove_KeyItem' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1198:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1247:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1257:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1279:	MethodNamingConventions:	The JUnit 5 test method name 'testSize_Key' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java:1365:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMapTest.java:55:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMapTest.java:56:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedLinkedHashMapTest.java:61:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedLinkedHashMapTest.java:62:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/HashSetValuedHashMapTest.java:60:	MethodNamingConventions:	The JUnit 5 test method name 'testHashSetValuedHashMap_2' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/HashSetValuedHashMapTest.java:61:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/HashSetValuedHashMapTest.java:91:	MethodNamingConventions:	The JUnit 5 test method name 'testHashSetValueHashMap_1' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/LinkedHashSetValuedLinkedHashMapTest.java:77:	MethodNamingConventions:	The JUnit 5 test method name 'testHashSetValueHashMap_1' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/LinkedHashSetValuedLinkedHashMapTest.java:100:	MethodNamingConventions:	The JUnit 5 test method name 'testLinkedHashSetValuedLinkedHashMap_2' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/LinkedHashSetValuedLinkedHashMapTest.java:101:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMapTest.java:51:	MethodNamingConventions:	The JUnit 5 test method name 'testFactory_Decorate' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMapTest.java:72:	MethodNamingConventions:	The JUnit 5 test method name 'testFactory_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMapTest.java:121:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:57:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:129:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:130:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:173:	LooseCoupling:	Avoid using implementation types like 'Map'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:173:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:187:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java:241:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:115:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:116:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:122:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:123:	UselessQualifiedThis:	Useless qualified this usage in the same class.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:167:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:466:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:678:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:680:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:681:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:682:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:703:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:705:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:706:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java:707:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:81:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:87:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:93:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:99:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:105:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:116:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:122:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:133:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java:139:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueueTest.java:90:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/queue/TransformedQueueTest.java:88:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedQueue_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/AbstractSetTest.java:88:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/AbstractSetTest.java:126:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/AbstractSetTest.java:163:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/ListOrderedSetTest.java:259:	LooseCoupling:	Avoid using implementation types like 'Collection'; use the interface instead
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/MapBackedSet2Test.java:50:	UncommentedEmptyMethodBody:	Document empty method body
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/MapBackedSet2Test.java:55:	UncommentedEmptyMethodBody:	Document empty method body
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/TransformedNavigableSetTest.java:75:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedSet_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/TransformedSetTest.java:93:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedSet_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/set/TransformedSortedSetTest.java:73:	MethodNamingConventions:	The JUnit 5 test method name 'testTransformedSet_decorateTransform' doesn't match '[a-z][a-zA-Z0-9]*'
/home/mehdy/Documents/VV/VV-TP2-Codeàanalyser/commons-collections/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java:422:	LocalVariableNamingConventions:	The final local variable name 'char_b' doesn't match '[a-z][a-zA-Z0-9]*'
